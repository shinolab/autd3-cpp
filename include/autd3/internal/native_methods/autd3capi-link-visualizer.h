#pragma once

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdint>

namespace autd3::internal::native_methods {

enum class Backend : uint8_t {
  Plotters = 0,
  Python = 1,
  Null = 2,
};

enum class CMap : uint8_t {
  Jet = 0,
  Viridis = 1,
  Magma = 2,
  Inferno = 3,
  Plasma = 4,
  Cividis = 5,
  Turbo = 6,
  Circle = 7,
  Bluered = 8,
  Breeze = 9,
  Mist = 10,
  Earth = 11,
  Hell = 12,
};

enum class Directivity : uint8_t {
  Sphere = 0,
  T4010A1 = 1,
};

struct PlotRangePtr {
  void* _0;
};

struct ConfigPtr {
  void* _0;
};

struct NullPlotConfigPtr {
  void* _0;
};

struct PlotConfigPtr {
  void* _0;
};

struct ResultPlotConfig {
  PlotConfigPtr result;
  uint32_t err_len;
  void* err;
};

struct PyPlotConfigPtr {
  void* _0;
};

struct ResultPyPlotConfig {
  PyPlotConfigPtr result;
  uint32_t err_len;
  void* err;
};

extern "C" {

[[nodiscard]]
PlotRangePtr AUTDLinkVisualizerPlotRange(double x_min,
                                         double x_max,
                                         double y_min,
                                         double y_max,
                                         double z_min,
                                         double z_max,
                                         double resolution);

[[nodiscard]] uint64_t AUTDLinkVisualizerPlotRangeObservePointsLen(PlotRangePtr range);

void AUTDLinkVisualizerPlotRangeObservePoints(PlotRangePtr range, double *points);

uint32_t AUTDLinkVisualizerPhasesOf(LinkPtr visualizer,
                                    Backend backend,
                                    Directivity directivity,
                                    uint32_t idx,
                                    uint8_t *buf);

uint32_t AUTDLinkVisualizerIntensitiesOf(LinkPtr visualizer,
                                         Backend backend,
                                         Directivity directivity,
                                         uint32_t idx,
                                         uint8_t *buf);

uint32_t AUTDLinkVisualizerModulation(LinkPtr visualizer,
                                      Backend backend,
                                      Directivity directivity,
                                      uint8_t *buf);

ResultI32 AUTDLinkVisualizerCalcFieldOf(LinkPtr visualizer,
                                        Backend backend,
                                        Directivity directivity,
                                        const double *points,
                                        uint32_t points_len,
                                        GeometryPtr geometry,
                                        uint32_t idx,
                                        double *buf);

[[nodiscard]]
ResultI32 AUTDLinkVisualizerPlotFieldOf(LinkPtr visualizer,
                                        Backend backend,
                                        Directivity directivity,
                                        ConfigPtr config,
                                        PlotRangePtr range,
                                        GeometryPtr geometry,
                                        uint32_t idx);

[[nodiscard]]
ResultI32 AUTDLinkVisualizerPlotPhaseOf(LinkPtr visualizer,
                                        Backend backend,
                                        Directivity directivity,
                                        ConfigPtr config,
                                        GeometryPtr geometry,
                                        uint32_t idx);

[[nodiscard]]
ResultI32 AUTDLinkVisualizerPlotModulation(LinkPtr visualizer,
                                           Backend backend,
                                           Directivity directivity,
                                           ConfigPtr config);

[[nodiscard]] LinkBuilderPtr AUTDLinkVisualizerSphereNull(bool use_gpu, int32_t gpu_idx);

[[nodiscard]] LinkBuilderPtr AUTDLinkVisualizerT4010A1Null(bool use_gpu, int32_t gpu_idx);

[[nodiscard]] NullPlotConfigPtr AUTDLinkVisualizerNullPlotConfigDefault();

[[nodiscard]] LinkBuilderPtr AUTDLinkVisualizerSpherePlotters(bool use_gpu, int32_t gpu_idx);

[[nodiscard]] LinkBuilderPtr AUTDLinkVisualizerT4010A1Plotters(bool use_gpu, int32_t gpu_idx);

[[nodiscard]] PlotConfigPtr AUTDLinkVisualizerPlotConfigDefault();

[[nodiscard]]
PlotConfigPtr AUTDLinkVisualizerPlotConfigWithFigSize(PlotConfigPtr config,
                                                      uint32_t width,
                                                      uint32_t height);

[[nodiscard]]
PlotConfigPtr AUTDLinkVisualizerPlotConfigWithCBarSize(PlotConfigPtr config,
                                                       double cbar_size);

[[nodiscard]]
PlotConfigPtr AUTDLinkVisualizerPlotConfigWithFontSize(PlotConfigPtr config,
                                                       uint32_t font_size);

[[nodiscard]]
PlotConfigPtr AUTDLinkVisualizerPlotConfigWithLabelAreaSize(PlotConfigPtr config,
                                                            uint32_t label_area_size);

[[nodiscard]]
PlotConfigPtr AUTDLinkVisualizerPlotConfigWithMargin(PlotConfigPtr config,
                                                     uint32_t margin);

[[nodiscard]]
PlotConfigPtr AUTDLinkVisualizerPlotConfigWithTicksStep(PlotConfigPtr config,
                                                        double ticks_step);

[[nodiscard]] PlotConfigPtr AUTDLinkVisualizerPlotConfigWithCMap(PlotConfigPtr config, CMap cmap);

[[nodiscard]]
ResultPlotConfig AUTDLinkVisualizerPlotConfigWithFName(PlotConfigPtr config,
                                                       const char *fname);

[[nodiscard]] LinkBuilderPtr AUTDLinkVisualizerSpherePython(bool use_gpu, int32_t gpu_idx);

[[nodiscard]] LinkBuilderPtr AUTDLinkVisualizerT4010A1Python(bool use_gpu, int32_t gpu_idx);

[[nodiscard]] PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigDefault();

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithFigSize(PyPlotConfigPtr config,
                                                          int32_t width,
                                                          int32_t height);

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithDPI(PyPlotConfigPtr config,
                                                      int32_t dpi);

[[nodiscard]]
ResultPyPlotConfig AUTDLinkVisualizerPyPlotConfigWithCBarPosition(PyPlotConfigPtr config,
                                                                  const char *cbar_position);

[[nodiscard]]
ResultPyPlotConfig AUTDLinkVisualizerPyPlotConfigWithCBarSize(PyPlotConfigPtr config,
                                                              const char *cbar_size);

[[nodiscard]]
ResultPyPlotConfig AUTDLinkVisualizerPyPlotConfigWithCBarPad(PyPlotConfigPtr config,
                                                             const char *cbar_pad);

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithFontSize(PyPlotConfigPtr config,
                                                           int32_t fontsize);

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithTicksStep(PyPlotConfigPtr config,
                                                            double ticks_step);

[[nodiscard]]
ResultPyPlotConfig AUTDLinkVisualizerPyPlotConfigWithCMap(PyPlotConfigPtr config,
                                                          const char *cmap);

[[nodiscard]]
PyPlotConfigPtr AUTDLinkVisualizerPyPlotConfigWithShow(PyPlotConfigPtr config,
                                                       bool show);

[[nodiscard]]
ResultPyPlotConfig AUTDLinkVisualizerPyPlotConfigWithFName(PyPlotConfigPtr config,
                                                           const char *fname);

} // extern "C"

} // namespace autd3::internal::native_methods
