#pragma once

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdint>

namespace autd3::native_methods {

constexpr const uint32_t NUM_TRANS_IN_UNIT = 249;

constexpr const uint32_t NUM_TRANS_IN_X = 18;

constexpr const uint32_t NUM_TRANS_IN_Y = 14;

constexpr const float TRANS_SPACING_MM = 10.16f;

constexpr const float DEVICE_HEIGHT_MM = 151.4f;

constexpr const float DEVICE_WIDTH_MM = 192.0f;

constexpr const int32_t AUTD3_ERR = -1;

constexpr const int32_t AUTD3_TRUE = 1;

constexpr const int32_t AUTD3_FALSE = 0;

enum class DebugTypeTag : uint8_t {
  None = 0,
  BaseSignal = 1,
  Thermo = 2,
  ForceFan = 3,
  Sync = 4,
  ModSegment = 5,
  ModIdx = 6,
  StmSegment = 7,
  StmIdx = 8,
  IsStmMode = 9,
  PwmOut = 10,
  Direct = 11,
  SysTimeEq = 12,
};

enum class DynWindow : uint32_t {
  Rectangular = 0,
  Blackman = 1,
};

enum class GPIOIn : uint8_t {
  I0 = 0,
  I1 = 1,
  I2 = 2,
  I3 = 3,
};

enum class GPIOOut : uint8_t {
  O0 = 0,
  O1 = 1,
  O2 = 2,
  O3 = 3,
};

enum class GainSTMMode : uint8_t {
  PhaseIntensityFull = 0,
  PhaseFull = 1,
  PhaseHalf = 2,
};

enum class Segment : uint8_t {
  S0 = 0,
  S1 = 1,
};

enum class SilencerTarget : uint8_t {
  Intensity = 0,
  PulseWidth = 1,
};

enum class SyncMode : uint8_t {
  FreeRun = 0,
  DC = 1,
};

enum class TransitionModeTag : uint8_t {
  SyncIdx = 0,
  SysTime = 1,
  Gpio = 2,
  Ext = 3,
  Immediate = 4,
};

struct LoopBehavior {
  uint16_t rep;
};

struct TransitionModeWrap {
  TransitionModeTag tag;
  uint64_t value;
};

struct ControllerPtr {
  const void *_0;
};

struct DevicePtr {
  const void *_0;
};

struct TransducerPtr {
  const void *_0;
};

struct GeometryPtr {
  const void *_0;
};

struct ModulationPtr {
  const void *_0;
};

struct GainPtr {
  const void *_0;
};

struct LinkPtr {
  const void *_0;
};

struct DatagramPtr {
  const void *_0;
};

struct LinkBuilderPtr {
  const void *_0;
};

struct ResultI32 {
  int32_t result;
  uint32_t err_len;
  const void* err;
};

struct ResultModulation {
  ModulationPtr result;
  uint32_t err_len;
  const void* err;
};

struct ResultDatagram {
  DatagramPtr result;
  uint32_t err_len;
  const void* err;
};

struct Drive {
  uint8_t phase;
  uint8_t intensity;
};

struct GainSTMPtr {
  const void *_0;
};

struct FociSTMPtr {
  const void *_0;
};

struct ResultGainSTM {
  GainSTMPtr result;
  uint32_t err_len;
  const void* err;
};

struct ResultFociSTM {
  FociSTMPtr result;
  uint32_t err_len;
  const void* err;
};

struct DebugTypeWrap {
  DebugTypeTag ty;
  uint64_t value;
};

struct ResultSamplingConfig {
  SamplingConfig result;
  uint32_t err_len;
  const void* err;
};

struct RuntimePtr {
  const void *_0;
};

struct HandlePtr {
  const void *_0;
};

struct DynSincInterpolator {
  DynWindow window;
  uint32_t window_size;
};

} // namespace autd3::native_methods
