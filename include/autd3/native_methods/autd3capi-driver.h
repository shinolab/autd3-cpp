#pragma once

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdint>

namespace autd3::native_methods {

constexpr const uint32_t NUM_TRANS_IN_UNIT = 249;

constexpr const uint32_t NUM_TRANS_IN_X = 18;

constexpr const uint32_t NUM_TRANS_IN_Y = 14;

constexpr const float TRANS_SPACING_MM = 10.16f;

constexpr const float DEVICE_HEIGHT_MM = 151.4f;

constexpr const float DEVICE_WIDTH_MM = 192.0f;

enum class AUTDStatus : uint8_t {
  AUTDTrue = 0,
  AUTDFalse = 1,
  AUTDErr = 2,
};

enum class DebugTypeTag : uint8_t {
  None = 0,
  BaseSignal = 1,
  Thermo = 2,
  ForceFan = 3,
  Sync = 4,
  ModSegment = 5,
  ModIdx = 6,
  StmSegment = 7,
  StmIdx = 8,
  IsStmMode = 9,
  PwmOut = 10,
  Direct = 11,
  SysTimeEq = 12,
};

enum class DynWindow : uint32_t {
  Rectangular = 0,
  Blackman = 1,
};

enum class SpinStrategyTag : uint8_t {
  YieldThread = 0,
  SpinLoopHint = 1,
};

enum class TimerStrategyTag : uint8_t {
  Std = 0,
  Spin = 1,
  Async = 2,
  Waitable = 3,
};

enum class TransitionModeTag : uint8_t {
  SyncIdx = 0,
  SysTime = 1,
  Gpio = 2,
  Ext = 3,
  Immediate = 4,
  None = 255,
};

struct DatagramPtr {
  const void *_0;
};

struct GainPtr {
  const void *_0;
};

struct DynSincInterpolator {
  DynWindow window;
  uint32_t window_size;
};

struct ResultGain {
  GainPtr result;
  uint32_t err_len;
  const void* err;
};

struct ModulationPtr {
  const void *_0;
};

struct ResultModulation {
  ModulationPtr result;
  uint32_t err_len;
  const void* err;
};

struct ResultSamplingConfig {
  SamplingConfig result;
  uint32_t err_len;
  const void* err;
};

struct TimerStrategyWrap {
  TimerStrategyTag tag;
  uint32_t value;
  SpinStrategyTag spin_strategy;
};

struct ResultStatus {
  AUTDStatus result;
  uint32_t err_len;
  const void* err;
};

struct SyncLinkBuilderPtr {
  const void *_0;
};

struct ResultSyncLinkBuilder {
  SyncLinkBuilderPtr result;
  uint32_t err_len;
  const void* err;
};

struct LinkBuilderPtr {
  const void *_0;
};

struct ResultLinkBuilder {
  LinkBuilderPtr result;
  uint32_t err_len;
  const void* err;
};

struct ControllerPtr {
  const void *_0;
};

struct RuntimePtr {
  const void *_0;
};

struct HandlePtr {
  const void *_0;
};

union TransitionModeValue {
  uint64_t null;
  DcSysTime sys_time;
  GPIOIn gpio_in;
};

struct TransitionModeWrap {
  TransitionModeTag tag;
  TransitionModeValue value;
};

struct TransducerPtr {
  const void *_0;
};

struct DevicePtr {
  const void *_0;
};

struct GeometryPtr {
  const void *_0;
};

struct LinkPtr {
  const void *_0;
};

union DebugTypeValue {
  uint64_t null;
  DcSysTime sys_time;
  uint16_t idx;
  bool direct;
};

struct DebugTypeWrap {
  DebugTypeTag ty;
  DebugTypeValue value;
};

struct FociSTMPtr {
  const void *_0;
};

struct GainSTMPtr {
  const void *_0;
};

struct ResultFociSTM {
  FociSTMPtr result;
  uint32_t err_len;
  const void* err;
};

struct ResultGainSTM {
  GainSTMPtr result;
  uint32_t err_len;
  const void* err;
};

struct ControllerBuilderPtr {
  const void *_0;
};

struct Duration {
  uint64_t nanos;
};

struct OptionDuration {
  bool has_value;
  Duration value;
};
constexpr const OptionDuration OptionDuration_NONE = OptionDuration{ /* .has_value = */ false, /* .value = */ Duration{ /* .nanos = */ 0 } };



} // namespace autd3::native_methods
