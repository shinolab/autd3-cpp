#if defined __GNUC__ && defined COVERAGE
#define AUTD3_API __attribute__((__used__))
#else
#define AUTD3_API
#endif

#pragma once

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdint>

namespace autd3::native_methods {

enum class Status : uint8_t {
  Error = 0,
  StateChanged = 1,
  Lost = 2,
};

enum class SyncMode : uint8_t {
  FreeRun = 0,
  DC = 1,
};

struct EthernetAdaptersPtr {
  void* _0;
};

struct LinkSOEMBuilderPtr {
  void* _0;
};

struct LinkRemoteSOEMBuilderPtr {
  void* _0;
};

struct ResultLinkRemoteSOEMBuilder {
  LinkRemoteSOEMBuilderPtr result;
  uint32_t err_len;
  void* err;
};

extern "C" {

AUTD3_API [[nodiscard]] EthernetAdaptersPtr AUTDAdapterPointer();

AUTD3_API [[nodiscard]] uint32_t AUTDAdapterGetSize(EthernetAdaptersPtr adapters);

AUTD3_API
void AUTDAdapterGetAdapter(EthernetAdaptersPtr adapters, uint32_t idx, char* desc, char* name);

AUTD3_API void AUTDAdapterPointerDelete(EthernetAdaptersPtr adapters);

AUTD3_API [[nodiscard]] LinkSOEMBuilderPtr AUTDLinkSOEM();

AUTD3_API
AUTD3_API [[nodiscard]] LinkSOEMBuilderPtr AUTDLinkSOEMWithSendCycle(LinkSOEMBuilderPtr soem, uint64_t cycle);

AUTD3_API
AUTD3_API [[nodiscard]] LinkSOEMBuilderPtr AUTDLinkSOEMWithSync0Cycle(LinkSOEMBuilderPtr soem, uint64_t cycle);

AUTD3_API
AUTD3_API [[nodiscard]] LinkSOEMBuilderPtr AUTDLinkSOEMWithBufSize(LinkSOEMBuilderPtr soem, uint32_t buf_size);

AUTD3_API
AUTD3_API [[nodiscard]] LinkSOEMBuilderPtr AUTDLinkSOEMWithTimerStrategy(LinkSOEMBuilderPtr soem, TimerStrategy timer_strategy);

AUTD3_API
AUTD3_API [[nodiscard]] LinkSOEMBuilderPtr AUTDLinkSOEMWithSyncMode(LinkSOEMBuilderPtr soem, SyncMode mode);

AUTD3_API
AUTD3_API [[nodiscard]] LinkSOEMBuilderPtr AUTDLinkSOEMWithIfname(LinkSOEMBuilderPtr soem, const char* ifname);

AUTD3_API
AUTD3_API [[nodiscard]] LinkSOEMBuilderPtr AUTDLinkSOEMWithStateCheckInterval(LinkSOEMBuilderPtr soem, uint32_t interval_ms);

AUTD3_API
AUTD3_API [[nodiscard]] LinkSOEMBuilderPtr AUTDLinkSOEMWithErrHandler(LinkSOEMBuilderPtr soem, void* handler, void* context);

AUTD3_API
AUTD3_API [[nodiscard]] LinkSOEMBuilderPtr AUTDLinkSOEMWithTimeout(LinkSOEMBuilderPtr soem, uint64_t timeout_ns);

AUTD3_API [[nodiscard]] LinkBuilderPtr AUTDLinkSOEMIntoBuilder(LinkSOEMBuilderPtr soem);

AUTD3_API [[nodiscard]] ResultLinkRemoteSOEMBuilder AUTDLinkRemoteSOEM(const char* addr);

AUTD3_API
AUTD3_API [[nodiscard]] LinkRemoteSOEMBuilderPtr AUTDLinkRemoteSOEMWithTimeout(LinkRemoteSOEMBuilderPtr soem, uint64_t timeout_ns);

AUTD3_API [[nodiscard]] LinkBuilderPtr AUTDLinkRemoteSOEMIntoBuilder(LinkRemoteSOEMBuilderPtr soem);

}  // extern "C"

}  // namespace autd3::native_methods
