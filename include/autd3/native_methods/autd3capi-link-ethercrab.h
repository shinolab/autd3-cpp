#pragma once

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdint>

namespace autd3::native_methods {

struct ThreadPriorityPtr {
  const void *_0;
};

struct EtherCrabOption {
  const char *ifname;
  uint32_t buf_size;
  Duration timeouts_state_transition;
  Duration timeouts_pdu;
  Duration timeouts_eeprom;
  Duration timeouts_wait_loop_delay;
  Duration timeouts_mailbox_echo;
  Duration timeouts_mailbox_response;
  uint32_t main_device_config_dc_static_sync_iterations;
  uint64_t main_device_config_retry_behaviour;
  Duration dc_configuration_start_delay;
  Duration dc_configuration_sync0_period;
  Duration dc_configuration_sync0_shift;
  Duration state_check_period;
  Duration sync_tolerance;
  Duration sync_timeout;
  ThreadPriorityPtr tx_rx_thread_builder;
  int32_t tx_rx_thread_affinity;
  ThreadPriorityPtr main_thread_builder;
  int32_t main_thread_affinity;
};

extern "C" {

void AUTDLinkEtherCrabTracingInit();

ResultStatus AUTDLinkEtherCrabTracingInitWithFile(const char *path);

[[nodiscard]]
ResultLink AUTDLinkEtherCrab(const void* err_handler,
                             const void* err_context,
                             EtherCrabOption option);

[[nodiscard]] bool AUTDLinkEtherCrabIsDefault(EtherCrabOption option);

[[nodiscard]] uint32_t AUTDLinkEtherCrabStatusGetMsg(Status src, char *dst);

[[nodiscard]] ThreadPriorityPtr AUTDLinkEtherCrabThreadPriorityMin();

[[nodiscard]] ThreadPriorityPtr AUTDLinkEtherCrabThreadPriorityCrossplatform(uint8_t value);

[[nodiscard]] ThreadPriorityPtr AUTDLinkEtherCrabThreadPriorityMax();

}  // extern "C"

}  // namespace autd3::native_methods
